// <auto-generated />
using System;
using RouletteGameApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace RouletteGameApi.Migrations
{
    [DbContext(typeof(RouletteGameContext))]
    [Migration("20221121113336_FourthCreate")]
    partial class FourthCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.15");

            modelBuilder.Entity("RouletteGameApi.Models.BetInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("BetId");

                    b.Property<decimal>("BetAmount")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<string>("BetChoice")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("BetDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SpinId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SpinId");

                    b.ToTable("BetInfos");
                });

            modelBuilder.Entity("RouletteGameApi.Models.Payout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("PayoutId");

                    b.Property<int?>("BetId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("PayoutDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SpinId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalPayoutAmount")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BetId");

                    b.HasIndex("SpinId");

                    b.ToTable("Payouts");
                });

            modelBuilder.Entity("RouletteGameApi.Models.Spin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("SpinId");

                    b.Property<int?>("BetId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("Result")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("SpinDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Spins");
                });

            modelBuilder.Entity("RouletteGameApi.Models.BetInfo", b =>
                {
                    b.HasOne("RouletteGameApi.Models.Spin", null)
                        .WithMany("Bets")
                        .HasForeignKey("SpinId");
                });

            modelBuilder.Entity("RouletteGameApi.Models.Payout", b =>
                {
                    b.HasOne("RouletteGameApi.Models.BetInfo", "Bet")
                        .WithMany()
                        .HasForeignKey("BetId");

                    b.HasOne("RouletteGameApi.Models.Spin", "Spin")
                        .WithMany()
                        .HasForeignKey("SpinId");

                    b.Navigation("Bet");

                    b.Navigation("Spin");
                });

            modelBuilder.Entity("RouletteGameApi.Models.Spin", b =>
                {
                    b.Navigation("Bets");
                });
#pragma warning restore 612, 618
        }
    }
}
